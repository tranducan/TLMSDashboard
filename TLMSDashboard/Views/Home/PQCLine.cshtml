

@{
    ViewData["Title"] = "PQCLine Dashboard";
    @*var Ouput = Newtonsoft.Json.JsonConvert.SerializeObject(Model);*@

    var Query = ViewContext.HttpContext.Request.Query;
    var LineRequest = Query["Line"];
}



<main class="reloadable">
    <h5 id="current-date" class="text-right"></h5>
    <h5 id="reload-countdown" class="text-right mb-4 mt-2"></h5>

    <div class="jumbotron pcq-header" style="width: 100%; padding: 2rem 1rem">
        <h5 class="display-4">PQC production line dashboard</h5>
        <div class="btn-group pcq-head w-40" role="group" aria-label="Basic example">
            <a class="btn bg-green-2" href="#">

                <p>Yield (%)</p>
                <p>10</p>
            </a>
            <a class="btn bg-blue-2" href="#">
                <p>Throughput (pcs)</p>
                <p>30021</p>
            </a>
        </div>
    </div>

    <div class="pqc-lines row pqc-single-line">

        <a href="PQCLine?Line=Line01" class="col-sm-12 pqc-line">
            <div class="card border-0 shadow p-3 mb-5 bg-white roundeds">
                <div class="pqc-line-head">
                    <h3>Line01</h3>
                </div>
                <div class="pqc-line-model">

                    <p class="text-warning">3 (Not set Target) </p>

                </div>
                <div class="pqc-line-sumary">
                    <div class="row align-items-center">
                        <div class="col-6">
                            <div style="margin: 100px">
                                <canvas id="line-chart"></canvas>
                            </div>
                        </div>
                        <div class="col-6">
                            <h4 class="d-flex justify-content-between sumary-item">
                                <span>Target</span>
                                <span>20<span class="pqc-unit">Units</span></span>
                            </h4>

                            <h4 class="d-flex justify-content-between sumary-item actual-item">
                                <span>Actual</span>
                                <span>10<span class="pqc-unit">Units</span></span>
                            </h4>

                            <h4 class="d-flex justify-content-between sumary-item">
                                <span>Open</span>
                                <span>30 <span class="pqc-unit">Units</span></span>
                            </h4>

                        </div>
                    </div>
                </div>
                <div class="pqc-line-time-running">
                    <h4 class="d-flex justify-content-between">
                        <span>Production Running</span>
                        <span> 30 hh\.mm <span class="hour-unit">H</span></span>
                    </h4>
                </div>

                <div class="pqc-line-quality">
                    <h3 class="text-warning">Rework Rate: 20 (%) </h3>
                    <div class="d-flex justify-content-between">
                        <span class="head not-pass-value">1000</span>
                        <span class="head pass-value">30000</span>
                    </div>
                    <div class="pqc-progress">
                        <div class="pqc-progress-bar">
                            <div class="pqc-progress-bar-fill" style="width: 40%"></div>
                        </div>
                    </div>
                    <div class="d-flex justify-content-between">
                        <span class="tail not-pass-key">Not passed</span>
                        <span class="tail pass-key">Passed</span>
                    </div>
                </div>
            </div>
        </a>


    </div>

    <script>(function ($) {
            $(document).ready(function () {


                /* productionLineData.forEach(function (productionLine) {
                    const data = {
                        labels: [
                            'Green',
                            'Blue'
                        ],
                        datasets: [{
                            label: 'My First Dataset',
                            data: [productionLine.Actual, productionLine.OpenQty],
                            backgroundColor: [
                                'rgb(0, 128, 0)',
                                'rgb(54, 162, 235)'
                            ],
                            hoverOffset: 4
                        }]
                    };

                    const config = {
                        type: 'doughnut',
                        data: data,
                        options: {
                            responsive: true,
                            plugins: {
                                legend: {
                                    display: false
                                },
                                tooltip: {
                                    callbacks: {
                                        afterLabel: function (context) {
                                            return ['Actual-Qty', 'Open-Qty'][context.dataIndex]
                                        },
                                    }
                                }
                            }

                        },
                    };

                    const query = `line-chart-${productionLine.Line}-${productionLine.Product}`;
                    new Chart(document.getElementById(query), config)
                })
                */

                const data = {
                    labels: [
                        'Green',
                        'Blue'
                    ],
                    datasets: [{
                        label: 'My First Dataset',
                        data: [30, 80],
                        backgroundColor: [
                            'rgb(0, 128, 0)',
                            'rgb(54, 162, 235)'
                        ],
                        hoverOffset: 4
                    }]
                };

                const config = {
                    type: 'doughnut',
                    data: data,
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                display: false
                            },
                            tooltip: {
                                callbacks: {
                                    afterLabel: function (context) {
                                        return ['Actual-Qty', 'Open-Qty'][context.dataIndex]
                                    },
                                }
                            }
                        }

                    },
                };

                const query = `line-chart`;
                new Chart(document.getElementById(query), config)

            })
        })(jQuery)</script>


    <div class="mb-4">
        <h2 class="text-center">PQC Realtime Chart</h2>
        <canvas id="chart-production-realtime"></canvas>
    </div>


    <script>(function ($) {
            @*$(document).ready(function () {
                var DATA_COUNT = productionRealTimes.length;
                var labels = productionRealTimes.map(function (data) {
                    return [`At: ${data.Hour}:00`, `Running product: ${data.Product}`]
                })

                const passData = productionRealTimes.map(function (productionRealTime) {

                    return productionRealTime.PassedQty
                });

                const notPassData = productionRealTimes.map(function (productionRealTime) {

                    return productionRealTime.NotPassedQty
                });

                var data = {
                    labels: labels,
                    datasets: [
                        {
                            label: 'Passed',
                            data: passData,
                            backgroundColor: '#4caf50',
                            stack: 'Stack 0',
                        },
                        {
                            label: 'Not Passed',
                            data: notPassData,
                            backgroundColor: Samples.utils.color(2),
                            stack: 'Stack 1',
                        }
                    ]
                };

                var config = {
                    type: 'bar',
                    data: data,
                    options: {
                        plugins: {
                            title: {
                                display: true,
                                text: 'PCQ Realtime Chart'
                            },
                        },
                        responsive: true,
                        interaction: {
                            intersect: false,
                        },
                        scales: {
                            x: {
                                stacked: true,
                            },
                            y: {
                                stacked: true
                            },
                        }
                    }
                };

                const myChart = new Chart(
                    document.getElementById('chart-production-realtime'),
                    config
                );
            });*@

        })(jQuery);
    </script>
</main>