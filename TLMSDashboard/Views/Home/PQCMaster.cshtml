
@model TLMSData.Models.ProductionInformation

@{
    ViewData["Title"] = "Main Dashboard";
    var Ouput = Newtonsoft.Json.JsonConvert.SerializeObject( Model);
    var Query = ViewContext.HttpContext.Request.Query;
    var LineRequest = Query["Line"];
}


<script>

    var productionInformation = @Html.Raw(Ouput);
    var productionLineData = productionInformation.productionLines;
</script>
<main class="reloadable">
    <h4 id="reload-countdown" class="text-right mb-4"></h4>

    <div class="jumbotron pcq-header" style="width: 100%; padding: 2rem 1rem">
        <h5 class="display-4">PQC production line dashboard</h5>
        <div class="btn-group pcq-head w-40" role="group" aria-label="Basic example">
            <a class="btn bg-green-2" href="#">

                <p>Yield (%)</p>
                <p>@Model.performance.Yield</p>
            </a>
            <a class="btn bg-blue-2" href="#">
                <p>Throughput (pcs)</p>
                <p>@Model.performance.Throughput</p>
            </a>
        </div>
    </div>

    <div class="pqc-lines row">
        @{
            foreach (var productionline in Model.productionLines)
            {
                var Pass = productionline.Actual - productionline.NotGood - productionline.Rework;
                var NotPass = productionline.Rework + productionline.NotGood;

                var PercentNotPassWithPass = Math.Round((decimal)NotPass / (NotPass + Pass) * 100);
                var ProductionRunning = productionline.InspectEnd - productionline.InspectStart;

                <a href="Activities?line=@productionline.Line" class="col-sm-4 pqc-line">
                    <div class="card border-0 shadow p-3 mb-5 bg-white roundeds">
                        <div class="pqc-line-head">
                            <h3>@productionline.Line</h3>
                        </div>
                        <div class="pqc-line-model">
                            @{
                                if(productionline.Status == TLMSData.Models.ProductionStatus.NotSetTarget)
                                {
                                    <p class = "text-warning">@productionline.Product (Not set Target) </p>
                                }
                                else
                                {
                                     <p class = "text-success">@productionline.Product </p>
                                }
                        }
                        </div>
                        <div class="pqc-line-sumary">
                            <div class="row align-items-center">
                                <div class="col-6">
                                    <div style="margin: 20px">
                                        <canvas id="@String.Format("line-chart-{0}-{1}", productionline.Line, productionline.Product)"></canvas>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <h4 class="d-flex justify-content-between sumary-item">
                                        <span>Target</span>
                                        <span>@productionline.OPTarget<span class="pqc-unit">Units</span></span>
                                    </h4>

                                    <h4 class="d-flex justify-content-between sumary-item actual-item">
                                        <span>Actual</span>
                                        <span>@productionline.Actual<span class="pqc-unit">Units</span></span>
                                    </h4>

                                    <h4 class="d-flex justify-content-between sumary-item">
                                        <span>Open</span>
                                        <span>@productionline.OpenQty <span class="pqc-unit">Units</span></span>
                                    </h4>

                                </div>
                            </div>
                        </div>
                        <div class="pqc-line-time-running">
                            <h4 class="d-flex justify-content-between">
                                <span>Production Running</span>
                                <span>@productionline.ProductionRunning.ToString(@"hh\.mm") <span class="hour-unit">H</span></span>
                            </h4>
                        </div>

                        <div class="pqc-line-quality">
                            @{
                                if(productionline.Status == TLMSData.Models.ProductionStatus.HighDefect)
                                {
                                    <h3 class= "text-danger">Defect Rate: @Math.Round(productionline.DefectRate,2).ToString() (%) </h3>
                                }
                                else if(productionline.Status == TLMSData.Models.ProductionStatus.HighRework)
                                {
                                    <h3 class= "text-warning">Rework Rate: @Math.Round(productionline.ReworkRate,2).ToString() (%) </h3>
                                }
                                else
                                {
                                    <h3 class= "text-success">Output Rate: @Math.Round(productionline.OutputRate,2).ToString() (%) </h3>
                                }
                            }
                            <div class="d-flex justify-content-between">
                                <span class="head not-pass-value">@NotPass</span>
                                <span class="head pass-value">@Pass</span>
                            </div>
                            <div class="pqc-progress">
                                <div class="pqc-progress-bar">
                                    <div class="pqc-progress-bar-fill" style="width: @String.Format("{0}%", PercentNotPassWithPass)"></div>
                                </div>
                            </div>
                            <div class="d-flex justify-content-between">
                                <span class="tail not-pass-key">Not passed</span>
                                <span class="tail pass-key">Passed</span>
                            </div>
                        </div>
                    </div>
                </a>
            }
        }


    </div>

    <script>
        (function ($) {
            $(document).ready(function () {
             

                productionLineData.forEach(function (productionLine) {
                    const data = {
                        labels: [
                            'Green',
                            'Blue'
                        ],
                        datasets: [{
                            label: 'My First Dataset',
                            data: [productionLine.Actual, productionLine.OpenQty],
                            backgroundColor: [
                                'rgb(0, 128, 0)',
                                'rgb(54, 162, 235)'
                            ],
                            hoverOffset: 4
                        }]
                    };

                    const config = {
                        type: 'doughnut',
                        data: data,
                        options: {
                            responsive: true,
                            plugins: {
                                legend: {
                                    display: false
                                },
                                tooltip: {
                                    callbacks: {
                                        afterLabel: function (context) {
                                            return ['Actual-Qty', 'Open-Qty'][context.dataIndex]
                                        },
                                    }
                                }
                            }

                        },
                    };

                    const query = `line-chart-${productionLine.Line}-${productionLine.Product}`;
                    new Chart(document.getElementById(query), config)
                })
                
             })
        })(jQuery)
    </script>


    <div>
        <h2 class="text-center">Product Running Chart</h2>
        <canvas id="model-chart"></canvas>
    </div>


    <script>
        (function ($) {
            // MODAL CHART

            $(document).ready(function () {

                var DATA_COUNT = productionLineData.length;
                var labels = productionLineData.map(function (data) {
                    return [`Line: ${data.Line}`, ` Model: ${data.Product}`]
                })

                const passData = productionLineData.map(function (productionline) {
                    var Pass = productionline.Actual - productionline.NotGood - productionline.Rework

                    return Pass
                })
                const notPassData = productionLineData.map(function (productionline) {
                    var NotPass = productionline.Rework + productionline.NotGood;
                    return NotPass
                })

                console.log(passData, notPassData)

                var data = {
                    labels: labels,
                    datasets: [
                        {
                            label: 'Passed',
                            data: passData,
                            backgroundColor: '#4caf50',
                            stack: 'Stack 0',
                        },
                        {
                            label: 'Not Passed',
                            data: notPassData,
                            backgroundColor: Samples.utils.color(2),
                            stack: 'Stack 1',
                        },
                    ]
                };

                var config = {
                    type: 'bar',
                    data: data,
                    options: {
                        plugins: {
                            title: {
                                display: true,
                                text: 'Chart Model And Line'
                            },
                        },
                        responsive: true,
                        interaction: {
                            intersect: false,
                        },
                        scales: {
                            x: {
                                stacked: true,
                            },
                            y: {
                                stacked: true
                            },
                        }
                    }
                };

                new Chart(
                    document.getElementById('model-chart'),
                    config
                );
            });

        })(jQuery);
    </script>
</main>
