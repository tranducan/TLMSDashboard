
@model List<TLMSData.Models.ProductionLine>


@{
    var Ouput = Newtonsoft.Json.JsonConvert.SerializeObject( Model);
    //foreach(var productionline  in Model)
    //{
    //    var output = productionline.Output;

    //    var Notgood = productionline.NotGood;
    //    var Ouput = Newtonsoft.Json.JsonConvert.SerializeObject( Model);  

    //}
}


<script>
    var productionLineData = @Html.Raw(Ouput);
    console.log(productionLineData);
</script>

<main class="reloadable">
    <div class="jumbotron pcq-header">
        <h5 class="display-4">PQC production line dashboard</h5>
        <div class="btn-group pcq-head w-40" role="group" aria-label="Basic example">
            <a class="btn bg-green-2" href="#">
                <p>Yeild</p>
                <p>20</p>
            </a>
            <a class="btn bg-blue-2" href="#">
                <p>Throughput</p>
                <p>20</p>
            </a>
        </div>
    </div>

    <div class="pqc-lines row">
        @{
            foreach (var productionline in Model)
            {
                var Open = productionline.OPTarget - productionline.Actual;
                @*var Pass = productionline.Actual - productionline.NotGood - productionline.Rework;
                var NotPass = productionline.Rework + productionline.NotGood;*@

                var Pass = 40;
                var NotPass = 6;
                var PercentNotPassWithPass = Math.Round((float)NotPass / (NotPass + Pass) * 100);
                var ProductionRunning = productionline.InspectEnd - productionline.InspectStart;


                 <a href="#" class="col-lg-6 col-md-12 pqc-line">
                <div class="card border-0 shadow p-3 mb-5 bg-white roundeds">
                    <div class="pqc-line-head">
                        <h3>@productionline.Line</h3>
                    </div>
                    <div class="pqc-line-model">
                        <p>@productionline.Product</p>
                    </div>
                    <div class="pqc-line-sumary">
                        <div class="row align-items-center">
                            <div class="col-6">
                                <div style="margin: 20px">
                                    <canvas id="@String.Format("line-chart-{0}-{1}", productionline.Line, productionline.Product)"></canvas>
                                </div>
                            </div>
                            <div class="col-6">
                                <h4 class="d-flex justify-content-between sumary-item">
                                    <span>Target</span>
                                    <span>@productionline.OPTarget<span class="pqc-unit">Units</span></span>
                                </h4>

                                <h4 class="d-flex justify-content-between sumary-item actual-item">
                                    <span>Actual</span>
                                    <span>@productionline.Actual<span class="pqc-unit">Units</span></span>
                                </h4>

                                <h4 class="d-flex justify-content-between sumary-item">
                                    <span>Open</span>
                                    <span>@Open<span class="pqc-unit">Units</span></span>
                                </h4>

                            </div>
                        </div>
                    </div>
                    <div class="pqc-line-time-running">
                        <h4 class="d-flex justify-content-between">
                            <span>Production Running</span>
                            <span>@productionline.ProductionRunning <span class="hour-unit">H</span></span>
                        </h4>
                    </div>

                    <div class="pqc-line-quality">
                        <h3>Quality test</h3>
                        <div class="d-flex justify-content-between">
                            <span class="head not-pass-value">@NotPass</span>
                            <span class="head pass-value">@Pass</span>
                        </div>
                        <div class="pqc-progress">
                            <div class="pqc-progress-bar">
                                <div class="pqc-progress-bar-fill" style="width: @String.Format("{0}%", PercentNotPassWithPass)"></div>
                            </div>
                        </div>
                        <div class="d-flex justify-content-between">
                            <span class="tail not-pass-key">Not passed</span>
                            <span class="tail pass-key">Passed</span>
                        </div>
                    </div>
                </div>
            </a>
            }
        }

    </div>

    <script>
        // SET UP LINE PCQ CHART

        productionLineData.forEach(function (productionLine) {
            const data = {
                labels: [
                    'Red',
                    'Blue'
                ],
                datasets: [{
                    label: 'My First Dataset',
                    data: [productionLine.Actual, productionLine.Target],
                    backgroundColor: [
                        'rgb(255, 99, 132)',
                        'rgb(54, 162, 235)'
                    ],
                    hoverOffset: 4
                }]
            };

            const config = {
                type: 'doughnut',
                data: data,
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            callbacks: {
                                afterLabel: function (context) {
                                    return ['Actual', 'Total'][context.dataIndex]
                                },
                            }
                        }
                    }

                },
            };

            const query = `line-chart-${productionLine.Line}-${productionLine.Product}`;
            new Chart(document.getElementById(query), config)
        })

   
    </script>

    <div>
        <h2 class="text-center">Model chart</h2>
        <canvas id="model-chart"></canvas>
    </div>


    <script>(function ($) {
            // MODAL CHART

            $(document).ready(function () {

                var DATA_COUNT = productionLineData.length;
                var labels = productionLineData.map(function (data) {
                    return `Line: ${data.Line} - Model: ${data.Product}`
                })

                const passData = productionLineData.map(function (data) {

                    return 2
                })
                const notPassData = productionLineData.map(function (data) {
                    return 8
                })

                var data = {
                    labels: labels,
                    datasets: [
                        {
                            label: 'Pass',
                            data: passData,
                            backgroundColor: Samples.utils.color(1),
                            stack: 'Stack 0',
                        },
                        {
                            label: 'Not Pass',
                            data: notPassData,
                            backgroundColor: Samples.utils.color(2),
                            stack: 'Stack 1',
                        },
                    ]
                };

                var config = {
                    type: 'bar',
                    data: data,
                    options: {
                        plugins: {
                            title: {
                                display: true,
                                text: 'Chart Model And Line'
                            },
                        },
                        responsive: true,
                        interaction: {
                            intersect: false,
                        },
                        scales: {
                            x: {
                                stacked: true,
                            },
                            y: {
                                stacked: true
                            },
                        }
                    }
                };

                new Chart(
                    document.getElementById('model-chart'),
                    config
                );
            });

        })(jQuery);</script>
</main>
