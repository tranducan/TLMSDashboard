@model List<TLMSData.Models.ProductionSummary>
@{
    ViewData["Title"] = "PCQDataSummary Page";
    var Query = ViewContext.HttpContext.Request.Query;
    var Ouput = Newtonsoft.Json.JsonConvert.SerializeObject(Model);
    var LineRequest = Query["Line"];
    var StartDate = Query["StartDate"];
    var EndDate = Query["EndDate"];

    var Format = "yyyy-MM-dd";
    var TargetFormat = "MM/dd/yyyy";

    // TODO: Check LineRequest, StartDate, EndDate có giá trị hay không? Nếu không thì nhận giá trị default Line = ALL, DefaultDate

    var StartDateTime = DateTime.ParseExact(StartDate, Format, System.Globalization.CultureInfo.InvariantCulture);
    var EndDateTime = DateTime.ParseExact(EndDate, Format, System.Globalization.CultureInfo.InvariantCulture);

    var StartDateFormat = StartDateTime.ToString(TargetFormat);
    var EndDateFormat = EndDateTime.ToString(TargetFormat);
    var DefaultDate = String.Format("%s - %s", DateTime.Now.ToString("MM/dd/yyyy"), DateTime.Now.ToString("MM/dd/yyyy"));

}

<script>
    let data = @Html.Raw(Ouput);
    let jsonData = JSON.stringify(data);
    console.log(data);
</script>
<form id="filter">
    <div class="form-inline">
        <div class="form-row">
            <div class="form-group col-md-6">
                <label for="inputDate">Range Date</label>
                <input type="text"
                       name="daterange"
                       id="datepicker"
                       class="form-control w-100"
                       value="@StartDateFormat - @EndDateFormat" />
            </div>
            <div class="form-group col-md-6">
                <label for="inputLine">Line</label>
                <select class="form-control w-100" name="Line" id="linesummary">
                    <option value="ALL" selected="@(LineRequest.Equals("ALL"))">All</option>
                    <option value="L01" selected="@(LineRequest.Equals("L01"))">L01</option>
                    <option value="L02" selected="@(LineRequest.Equals("L02"))">L02</option>
                    <option value="L03" selected="@(LineRequest.Equals("L03"))">L03</option>
                    <option value="L04" selected="@(LineRequest.Equals("L04"))">L04</option>
                    <option value="L05" selected="@(LineRequest.Equals("L05"))">L05</option>
                    <option value="L06" selected="@(LineRequest.Equals("L06"))">L06</option>
                    <option value="L07" selected="@(LineRequest.Equals("L07"))">L07</option>
                    <option value="L08" selected="@(LineRequest.Equals("L08"))">L08</option>
                    <option value="L09" selected="@(LineRequest.Equals("L09"))">L09</option>
                    <option value="L10" selected="@(LineRequest.Equals("L10"))">L10</option>
                </select>
            </div>
        </div>
    </div>

    @{
        if (!(Model is null))
        {
            <div class="mt-3">
                <button type="submit" class="btn btn-primary mb-2 bg-blue-2">Search</button>
            </div>
        }
    }

</form>

<div class="mt-3">
    <div class="my-2 clearfix">
        <button type="submit" class="btn btn-info mb-2 float-right" id="export-btn">
            <i class="fas fa-download"></i>
            Export
        </button>
    </div>
    <table class="table table-striped table-bordered">
    <thead class="thead-blue">
        <tr>
                @{
                    if (!(Model is null))
                    {
                        <th data-name="Date">Date</th>
                         <th data-name="Shift">Working Shift</th>
                        <th data-name="StartTime">Start Time</th>
                        <th data-name="EndTime">End Time</th>
                        <th data-name="Line">Line</th>
                        <th data-name="Product">Product</th>
                        <th data-name="Lot">Lot</th>
                        <th data-name="Output">Output</th>
                            <th data-name="NG1">@Model[0].NotgoodItems[0].Description</th>
                            <th data-name="NG2">@Model[0].NotgoodItems[1].Description</th>
                            <th data-name="NG2">@Model[0].NotgoodItems[2].Description</th>
                            <th data-name="NG2">@Model[0].NotgoodItems[3].Description</th>
                            <th data-name="NG2">@Model[0].NotgoodItems[4].Description</th>
                            <th data-name="NotgoodItems">Other NG</th>
                            <th data-name="RW1">@Model[0].Rework5Items[0].Description</th>
                            <th data-name="RW2">@Model[0].Rework5Items[1].Description</th>
                            <th data-name="RW3">@Model[0].Rework5Items[2].Description</th>
                            <th data-name="RW4">@Model[0].Rework5Items[3].Description</th>
                            <th data-name="RW5">@Model[0].Rework5Items[4].Description</th>
                            <th data-name="NotgoodItems">Other RW</th>
                    }
                }
            
        </tr>
    </thead>
    <tbody>
        @{
            var index = 0;
            if (!(Model is null))
            {
            foreach (var productionSumary in Model)
            {
                <tr>
                    <td>@productionSumary.ProductionLine.Date.ToString("dd-MMM-yyyy")</td>
                    <td>@productionSumary.ProductionLine.Shift</td>
                    <td>@productionSumary.ProductionLine.InspectStart.ToString("HH:mm:ss")</td>
                    <td>@productionSumary.ProductionLine.InspectEnd.ToString("HH:mm:ss")</td>
                    <td>@productionSumary.ProductionLine.Line</td>
                    <td>@productionSumary.ProductionLine.Product</td>
                    <td>@productionSumary.ProductionLine.Lot</td>
                    <td>@productionSumary.ProductionLine.Output</td>

                    @{
                        foreach (var notGoodItem in productionSumary.Notgood5Items)
                        {
                            <td>@notGoodItem.Quantity</td>
                        }
                    }
                    <td>
                        <button type="button" class="btn btn-primary bg-blue-2 btn-sm" data-toggle="modal" data-target="#notgoodModal-@index">
                            Other NG
                            <span class="badge badge-light">@productionSumary.NGOtherQuantity</span>
                        </button>

                    </td>
                    @{
                        foreach (var reworkItem in productionSumary.Rework5Items)
                        {
                            <td>@reworkItem.Quantity</td>
                        }
                    }
                    <td>
                        <button type="button" class="btn btn-primary bg-blue-2 btn-sm" data-toggle="modal" data-target="#rewordModal-@index">
                            Other RW
                            <span class="badge badge-light">@productionSumary.RWOtherQuantity</span>
                        </button>

                    </td>
                </tr>

                {
                    index = index + 1;
                }
            }
            }
        }
    </tbody>
    </table>

    @{
        var indexNotGood = 0;
        if (!(Model is null))
        {
            foreach (var productionSumary in Model)
            {
                <!-- Modal -->
                <div class="modal fade" id="notgoodModal-@indexNotGood" tabindex="1" aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="exampleModalLabel">Not Good Items</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <table class="table table-striped table-bordered">
                                    <thead class="thead-blue">
                                        <tr>
                                            <th data-name="DefectCode">DefectCode</th>
                                            <th data-name="Description">Description</th>
                                            <th data-name="Quantity">Quantity</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            foreach (var notGoodItem in productionSumary.NotgoodItems)
                                            {
                                                <tr>
                                                    <td>@notGoodItem.DefectCode</td>
                                                    <td>@notGoodItem.Description</td>
                                                    <td>@notGoodItem.Quantity</td>
                                                </tr>

                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-primary bg-blue-2" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
                {
                    indexNotGood = indexNotGood + 1;
                }
            }
        }
    }



    @{
        var indexRW = 0;
        if (!(Model is null))
        {
            foreach (var productionSumary in Model)
            {
                <!-- Modal -->
                <div class="modal" id="rewordModal-@indexRW" tabindex="1" aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="exampleModalLabel">Rework Items</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <table class="table table-striped table-bordered">
                                    <thead class="thead-blue">
                                        <tr>
                                            <th data-name="DefectCode">DefectCode</th>
                                            <th data-name="Description">Description</th>
                                            <th data-name="Quantity">Quantity</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            foreach (var reworkItem in productionSumary.ReworkItems)
                                            {
                                                <tr>
                                                    <td>@reworkItem.DefectCode</td>
                                                    <td>@reworkItem.Description</td>
                                                    <td>@reworkItem.Quantity</td>
                                                </tr>

                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-primary bg-blue-2" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
                {
                    indexRW = indexRW + 1;
                }
            }
        }
    }

</div>
<script>
    (function($) {


        $("#export-btn").click(function () {
            const exportData = data.map(function (production) {
                let lineInfo = {
                    Date: production.ProductionLine.Date,
                    WorkingShift: production.ProductionLine.Shift,
                    StartTime: production.ProductionLine.InspectStart,
                    EndTime: production.ProductionLine.InspectEnd,
                    Line: production.ProductionLine.Line,
                    production: production.ProductionLine.Product,
                    Lot: production.ProductionLine.Lot,
                    Output: `${production.ProductionLine.Output}`
                }

                production.NotgoodItems.forEach(function (item) {
                    lineInfo[item.Description] = `${item.Quantity}`
                })
                production.ReworkItems.forEach(function (item) {
                    lineInfo[item.Description] = `${item.Quantity}`
                })

                return lineInfo;
            })
            console.log(exportData);
            var xls = new XlsExport(exportData, `PQCDataSummary-${Date.now()}`);
            xls.exportToXLS(`PQCDataSummary-${Date.now()}`);

        })

    })(jQuery)



</script>


           