@model TLMSData.Models.ProductTarget

@{
}
<div style="margin-top:10px;" class="goal-table">
    <button id="table2-new-row-button" class="btn mb-3 bg-blue-2">New Goal</button>
    <table class="table table-striped table-bordered" id="table2">
        <thead class="thead-blue">
            <tr>
                <th scope="col" data-name="DailyPerformanceGoaId">Id</th>
                <th scope="col" data-name="Model">model</th>
                <th scope="col" data-name="Site">site</th>
                <th scope="col" data-name="Line">line</th>
                <th scope="col" data-name="Process">process</th>
                <th scope="col" data-name="OutputTarget">outputTarget</th>
                <th scope="col" data-name="NotGoodTarget">notGoodTarget</th>
                <th scope="col" data-name="ReworkTarget">reworkTarget</th>
                <th scope="col" data-name="StartDate">startDate</th>
                <th scope="col" data-name="EndDate">endDate</th>
            </tr>
        </thead>
        <tbody>

        </tbody>
    </table>
</div>

<script>// Example with a add new row button & only some columns editable & removed actions column label
    (function ($) {
        // MODAL CHART

        $(document).ready(function () {

            const PERFORMANCEGOAL_URL = "https://localhost:5001/api/performance";

            var example2 = new BSTable("table2", {
                editableColumns: "0,1,2,3,4,5,6,7,8,9,10",
                onDelete: function (rowElement) {
                    console.log("DELELTE:", rowElement);
                    let rowAsJQuery = $(rowElement);
                    let listValue = rowAsJQuery.find("th, td").map(function () {
                        return $(this).text()
                    })
                        .get();

                    let listKey = $("#table2 thead tr th").map(function () {
                        return $(this).attr("data-name");
                    })
                        .get();
                    listValue.pop();

                    var mapEditValue = {}
                    listKey.forEach(function (key, index) {

                        mapEditValue[key] = (listValue[index] && listValue[index] != "null") ? listValue[index] : null;
                    })


                    deleteRecord(mapEditValue, function () {
                        fetchPerformacnes();
                    })


                },
                onEdit: function (rowElement) {
                    console.log("EDITED:", rowElement);

                    let rowAsJQuery = $(rowElement);
                    let listValue = rowAsJQuery.find("th, td").map(function () {
                        return $(this).text()
                    })
                        .get();

                    let listKey = $("#table2 thead tr th").map(function () {
                        return $(this).attr("data-name");
                    })
                        .get();
                    listValue.pop();

                    var mapEditValue = {}
                    listKey.forEach(function (key, index) {
                        
                        mapEditValue[key] = (listValue[index] || listValue[index] != "null") ? listValue[index] : null;
                    })

                    if (mapEditValue.DailyPerformanceGoaId.length > 0) {
                        // update

                        editRecord(mapEditValue, function () {
                            fetchPerformacnes();
                        })

                    } else {
                        // add new
                        delete mapEditValue.DailyPerformanceGoaId;
                        addNewRecord(mapEditValue, function () {
                            fetchPerformacnes();
                        })
                    }
                },
                advanced: {
                    columnLabel: ''
                }
            });

            $("#table2-new-row-button").click(function () {
                addRow();
                example2.refresh();
            })

            function fetchPerformacnes() {
                $.get(PERFORMANCEGOAL_URL, function (data, status) {
                    const performances = data.performanceGoals;

                    var $tbody = $("#table2 tbody");
                    $tbody.empty();
                    performances.forEach(function (performance) {
                        $tbody.append(`
                            <tr>
                                <th scope="row">${performance.dailyPerformanceGoaId}</th>
                                <td>${performance.model}</td>
                                <td>${performance.site}</td>
                                <td>${performance.line}</td>
                                <td>${performance.process}</td>
                                <td>${performance.outputTarget}</td>
                                <td>${performance.notGoodTarget}</td>
                                <td>${performance.reworkTarget}</td>
                                <td>${performance.startDate}</td>
                                <td>${performance.endDate}</td>

                            </tr>
                        `)
                    })

                    example2.refresh();
                })
            }

            function addNewRecord(data, callback) {
                const postData = {
                    value: data
                };

                console.log(JSON.stringify(postData));
                $.ajax({
                    url: PERFORMANCEGOAL_URL,
                    type: "post",
                    data: JSON.stringify(postData),
                    processData: false,
                    contentType: "application/json; charset=UTF-8",
                    dataType: 'jsonp',
                    complete: callback
                })
                
            }

            function editRecord(data, callback) {
                const postData = {
                    value: data
                };

                console.log(JSON.stringify(postData));
                $.ajax({
                    url: PERFORMANCEGOAL_URL,
                    type: "put",
                    data: JSON.stringify(postData),
                    processData: false,
                    contentType: "application/json; charset=UTF-8",
                    dataType: 'jsonp',
                    complete: callback
                })
            }

            function deleteRecord(data, callback) {
                const postData = {
                    value: data
                };
                $.ajax({
                    url: PERFORMANCEGOAL_URL,
                    type: "delete",
                    data: JSON.stringify(postData),
                    processData: false,
                    contentType: "application/json; charset=UTF-8",
                    dataType: 'jsonp',
                    complete: callback
                })
               
            }



            fetchPerformacnes();
            example2.init();
        });

        function handleEdited(rowElm) {
            console.log("EDITED:", rowElm);

            let rowAsJQuery = $(rowElm);
            console.log("EDITED (as jquery):", rowAsJQuery);
        }

        


        function addRow() {
            // Generate new values for the table and show how BSTable updates
            var $tbody = $("#table2 tbody");
            $tbody.append(`
                            <tr>
                                <th scope="row"></th>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>

                            </tr>
            `)
        }

        
    })(jQuery);</script>

    

</script>
